"use strict";(self.webpackChunkZmitaCart=self.webpackChunkZmitaCart||[]).push([[306],{6796:(U,x,S)=>{S.d(x,{g:()=>Re});const P=[0,2e3,1e4,3e4,null];class ${constructor(e){this._retryDelays=void 0!==e?[...e,null]:P}nextRetryDelayInMilliseconds(e){return this._retryDelays[e.previousRetryCount]}}var g=S(5861);let w=(()=>{class i{}return i.Authorization="Authorization",i.Cookie="Cookie",i})();class k{constructor(e,t,n){this.statusCode=e,this.statusText=t,this.content=n}}class y{get(e,t){return this.send({...t,method:"GET",url:e})}post(e,t){return this.send({...t,method:"POST",url:e})}delete(e,t){return this.send({...t,method:"DELETE",url:e})}getCookieString(e){return""}}class b extends y{constructor(e,t){super(),this._innerClient=e,this._accessTokenFactory=t}send(e){var t=this;return(0,g.Z)(function*(){let n=!0;t._accessTokenFactory&&(!t._accessToken||e.url&&e.url.indexOf("/negotiate?")>0)&&(n=!1,t._accessToken=yield t._accessTokenFactory()),t._setAuthorizationHeader(e);const o=yield t._innerClient.send(e);return n&&401===o.statusCode&&t._accessTokenFactory?(t._accessToken=yield t._accessTokenFactory(),t._setAuthorizationHeader(e),yield t._innerClient.send(e)):o})()}_setAuthorizationHeader(e){e.headers||(e.headers={}),this._accessToken?e.headers[w.Authorization]=`Bearer ${this._accessToken}`:this._accessTokenFactory&&e.headers[w.Authorization]&&delete e.headers[w.Authorization]}getCookieString(e){return this._innerClient.getCookieString(e)}}class I extends Error{constructor(e,t){const n=new.target.prototype;super(`${e}: Status code '${t}'`),this.statusCode=t,this.__proto__=n}}class D extends Error{constructor(e="A timeout occurred."){const t=new.target.prototype;super(e),this.__proto__=t}}class E extends Error{constructor(e="An abort occurred."){const t=new.target.prototype;super(e),this.__proto__=t}}class R extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.transport=t,this.errorType="UnsupportedTransportError",this.__proto__=n}}class j extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.transport=t,this.errorType="DisabledTransportError",this.__proto__=n}}class Q extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.transport=t,this.errorType="FailedToStartTransportError",this.__proto__=n}}class q extends Error{constructor(e){const t=new.target.prototype;super(e),this.errorType="FailedToNegotiateWithServerError",this.__proto__=t}}class ee extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.innerErrors=t,this.__proto__=n}}var r=(()=>((r=r||{})[r.Trace=0]="Trace",r[r.Debug=1]="Debug",r[r.Information=2]="Information",r[r.Warning=3]="Warning",r[r.Error=4]="Error",r[r.Critical=5]="Critical",r[r.None=6]="None",r))();class M{constructor(){}log(e,t){}}M.instance=new M;const te="7.0.5";class C{static isRequired(e,t){if(null==e)throw new Error(`The '${t}' argument is required.`)}static isNotEmpty(e,t){if(!e||e.match(/^\s*$/))throw new Error(`The '${t}' argument should not be empty.`)}static isIn(e,t,n){if(!(e in t))throw new Error(`Unknown ${n} value: ${e}.`)}}class v{static get isBrowser(){return"object"==typeof window&&"object"==typeof window.document}static get isWebWorker(){return"object"==typeof self&&"importScripts"in self}static get isReactNative(){return"object"==typeof window&&typeof window.document>"u"}static get isNode(){return!this.isBrowser&&!this.isWebWorker&&!this.isReactNative}}function L(i,e){let t="";return N(i)?(t=`Binary data of length ${i.byteLength}`,e&&(t+=`. Content: '${function ne(i){const e=new Uint8Array(i);let t="";return e.forEach(n=>{t+=`0x${n<16?"0":""}${n.toString(16)} `}),t.substr(0,t.length-1)}(i)}'`)):"string"==typeof i&&(t=`String data of length ${i.length}`,e&&(t+=`. Content: '${i}'`)),t}function N(i){return i&&typeof ArrayBuffer<"u"&&(i instanceof ArrayBuffer||i.constructor&&"ArrayBuffer"===i.constructor.name)}function X(i,e,t,n,o,s){return B.apply(this,arguments)}function B(){return(B=(0,g.Z)(function*(i,e,t,n,o,s){const a={},[c,l]=H();a[c]=l,i.log(r.Trace,`(${e} transport) sending data. ${L(o,s.logMessageContent)}.`);const h=N(o)?"arraybuffer":"text",d=yield t.post(n,{content:o,headers:{...a,...s.headers},responseType:h,timeout:s.timeout,withCredentials:s.withCredentials});i.log(r.Trace,`(${e} transport) request complete. Response status: ${d.statusCode}.`)})).apply(this,arguments)}class re{constructor(e,t){this._subject=e,this._observer=t}dispose(){const e=this._subject.observers.indexOf(this._observer);e>-1&&this._subject.observers.splice(e,1),0===this._subject.observers.length&&this._subject.cancelCallback&&this._subject.cancelCallback().catch(t=>{})}}class W{constructor(e){this._minLevel=e,this.out=console}log(e,t){if(e>=this._minLevel){const n=`[${(new Date).toISOString()}] ${r[e]}: ${t}`;switch(e){case r.Critical:case r.Error:this.out.error(n);break;case r.Warning:this.out.warn(n);break;case r.Information:this.out.info(n);break;default:this.out.log(n)}}}}function H(){let i="X-SignalR-User-Agent";return v.isNode&&(i="User-Agent"),[i,se(te,ie(),v.isNode?"NodeJS":"Browser",ce())]}function se(i,e,t,n){let o="Microsoft SignalR/";const s=i.split(".");return o+=`${s[0]}.${s[1]}`,o+=` (${i}; `,o+=e&&""!==e?`${e}; `:"Unknown OS; ",o+=`${t}`,o+=n?`; ${n}`:"; Unknown Runtime Version",o+=")",o}function ie(){if(!v.isNode)return"";switch(process.platform){case"win32":return"Windows NT";case"darwin":return"macOS";case"linux":return"Linux";default:return process.platform}}function ce(){if(v.isNode)return process.versions.node}function K(i){return i.stack?i.stack:i.message?i.message:`${i}`}class he extends y{constructor(e){if(super(),this._logger=e,typeof fetch>"u"){const t=require;this._jar=new(t("tough-cookie").CookieJar),this._fetchType=t("node-fetch"),this._fetchType=t("fetch-cookie")(this._fetchType,this._jar)}else this._fetchType=fetch.bind(function le(){if(typeof globalThis<"u")return globalThis;if(typeof self<"u")return self;if(typeof window<"u")return window;if(typeof global<"u")return global;throw new Error("could not find global")}());if(typeof AbortController>"u"){const t=require;this._abortControllerType=t("abort-controller")}else this._abortControllerType=AbortController}send(e){var t=this;return(0,g.Z)(function*(){if(e.abortSignal&&e.abortSignal.aborted)throw new E;if(!e.method)throw new Error("No method defined.");if(!e.url)throw new Error("No url defined.");const n=new t._abortControllerType;let o;e.abortSignal&&(e.abortSignal.onabort=()=>{n.abort(),o=new E});let a,s=null;e.timeout&&(s=setTimeout(()=>{n.abort(),t._logger.log(r.Warning,"Timeout from HTTP request."),o=new D},e.timeout)),""===e.content&&(e.content=void 0),e.content&&(e.headers=e.headers||{},e.headers["Content-Type"]=N(e.content)?"application/octet-stream":"text/plain;charset=UTF-8");try{a=yield t._fetchType(e.url,{body:e.content,cache:"no-cache",credentials:!0===e.withCredentials?"include":"same-origin",headers:{"X-Requested-With":"XMLHttpRequest",...e.headers},method:e.method,mode:"cors",redirect:"follow",signal:n.signal})}catch(h){throw o||(t._logger.log(r.Warning,`Error from HTTP request. ${h}.`),h)}finally{s&&clearTimeout(s),e.abortSignal&&(e.abortSignal.onabort=null)}if(!a.ok){const h=yield J(a,"text");throw new I(h||a.statusText,a.status)}const l=yield J(a,e.responseType);return new k(a.status,a.statusText,l)})()}getCookieString(e){let t="";return v.isNode&&this._jar&&this._jar.getCookies(e,(n,o)=>t=o.join("; ")),t}}function J(i,e){let t;switch(e){case"arraybuffer":t=i.arrayBuffer();break;case"text":default:t=i.text();break;case"blob":case"document":case"json":throw new Error(`${e} is not supported.`)}return t}class ue extends y{constructor(e){super(),this._logger=e}send(e){return e.abortSignal&&e.abortSignal.aborted?Promise.reject(new E):e.method?e.url?new Promise((t,n)=>{const o=new XMLHttpRequest;o.open(e.method,e.url,!0),o.withCredentials=void 0===e.withCredentials||e.withCredentials,o.setRequestHeader("X-Requested-With","XMLHttpRequest"),""===e.content&&(e.content=void 0),e.content&&(N(e.content)?o.setRequestHeader("Content-Type","application/octet-stream"):o.setRequestHeader("Content-Type","text/plain;charset=UTF-8"));const s=e.headers;s&&Object.keys(s).forEach(a=>{o.setRequestHeader(a,s[a])}),e.responseType&&(o.responseType=e.responseType),e.abortSignal&&(e.abortSignal.onabort=()=>{o.abort(),n(new E)}),e.timeout&&(o.timeout=e.timeout),o.onload=()=>{e.abortSignal&&(e.abortSignal.onabort=null),o.status>=200&&o.status<300?t(new k(o.status,o.statusText,o.response||o.responseText)):n(new I(o.response||o.responseText||o.statusText,o.status))},o.onerror=()=>{this._logger.log(r.Warning,`Error from HTTP request. ${o.status}: ${o.statusText}.`),n(new I(o.statusText,o.status))},o.ontimeout=()=>{this._logger.log(r.Warning,"Timeout from HTTP request."),n(new D)},o.send(e.content)}):Promise.reject(new Error("No url defined.")):Promise.reject(new Error("No method defined."))}}class de extends y{constructor(e){if(super(),typeof fetch<"u"||v.isNode)this._httpClient=new he(e);else{if(!(typeof XMLHttpRequest<"u"))throw new Error("No usable HttpClient found.");this._httpClient=new ue(e)}}send(e){return e.abortSignal&&e.abortSignal.aborted?Promise.reject(new E):e.method?e.url?this._httpClient.send(e):Promise.reject(new Error("No url defined.")):Promise.reject(new Error("No method defined."))}getCookieString(e){return this._httpClient.getCookieString(e)}}var _=(()=>((_=_||{})[_.None=0]="None",_[_.WebSockets=1]="WebSockets",_[_.ServerSentEvents=2]="ServerSentEvents",_[_.LongPolling=4]="LongPolling",_))(),m=(()=>((m=m||{})[m.Text=1]="Text",m[m.Binary=2]="Binary",m))();class ge{constructor(){this._isAborted=!1,this.onabort=null}abort(){this._isAborted||(this._isAborted=!0,this.onabort&&this.onabort())}get signal(){return this}get aborted(){return this._isAborted}}class V{constructor(e,t,n){this._httpClient=e,this._logger=t,this._pollAbort=new ge,this._options=n,this._running=!1,this.onreceive=null,this.onclose=null}get pollAborted(){return this._pollAbort.aborted}connect(e,t){var n=this;return(0,g.Z)(function*(){if(C.isRequired(e,"url"),C.isRequired(t,"transferFormat"),C.isIn(t,m,"transferFormat"),n._url=e,n._logger.log(r.Trace,"(LongPolling transport) Connecting."),t===m.Binary&&typeof XMLHttpRequest<"u"&&"string"!=typeof(new XMLHttpRequest).responseType)throw new Error("Binary protocols over XmlHttpRequest not implementing advanced features are not supported.");const[o,s]=H(),a={[o]:s,...n._options.headers},c={abortSignal:n._pollAbort.signal,headers:a,timeout:1e5,withCredentials:n._options.withCredentials};t===m.Binary&&(c.responseType="arraybuffer");const l=`${e}&_=${Date.now()}`;n._logger.log(r.Trace,`(LongPolling transport) polling: ${l}.`);const h=yield n._httpClient.get(l,c);200!==h.statusCode?(n._logger.log(r.Error,`(LongPolling transport) Unexpected response code: ${h.statusCode}.`),n._closeError=new I(h.statusText||"",h.statusCode),n._running=!1):n._running=!0,n._receiving=n._poll(n._url,c)})()}_poll(e,t){var n=this;return(0,g.Z)(function*(){try{for(;n._running;)try{const o=`${e}&_=${Date.now()}`;n._logger.log(r.Trace,`(LongPolling transport) polling: ${o}.`);const s=yield n._httpClient.get(o,t);204===s.statusCode?(n._logger.log(r.Information,"(LongPolling transport) Poll terminated by server."),n._running=!1):200!==s.statusCode?(n._logger.log(r.Error,`(LongPolling transport) Unexpected response code: ${s.statusCode}.`),n._closeError=new I(s.statusText||"",s.statusCode),n._running=!1):s.content?(n._logger.log(r.Trace,`(LongPolling transport) data received. ${L(s.content,n._options.logMessageContent)}.`),n.onreceive&&n.onreceive(s.content)):n._logger.log(r.Trace,"(LongPolling transport) Poll timed out, reissuing.")}catch(o){n._running?o instanceof D?n._logger.log(r.Trace,"(LongPolling transport) Poll timed out, reissuing."):(n._closeError=o,n._running=!1):n._logger.log(r.Trace,`(LongPolling transport) Poll errored after shutdown: ${o.message}`)}}finally{n._logger.log(r.Trace,"(LongPolling transport) Polling complete."),n.pollAborted||n._raiseOnClose()}})()}send(e){var t=this;return(0,g.Z)(function*(){return t._running?X(t._logger,"LongPolling",t._httpClient,t._url,e,t._options):Promise.reject(new Error("Cannot send until the transport is connected"))})()}stop(){var e=this;return(0,g.Z)(function*(){e._logger.log(r.Trace,"(LongPolling transport) Stopping polling."),e._running=!1,e._pollAbort.abort();try{yield e._receiving,e._logger.log(r.Trace,`(LongPolling transport) sending DELETE request to ${e._url}.`);const t={},[n,o]=H();t[n]=o;const s={headers:{...t,...e._options.headers},timeout:e._options.timeout,withCredentials:e._options.withCredentials};yield e._httpClient.delete(e._url,s),e._logger.log(r.Trace,"(LongPolling transport) DELETE request sent.")}finally{e._logger.log(r.Trace,"(LongPolling transport) Stop finished."),e._raiseOnClose()}})()}_raiseOnClose(){if(this.onclose){let e="(LongPolling transport) Firing onclose event.";this._closeError&&(e+=" Error: "+this._closeError),this._logger.log(r.Trace,e),this.onclose(this._closeError)}}}class fe{constructor(e,t,n,o){this._httpClient=e,this._accessToken=t,this._logger=n,this._options=o,this.onreceive=null,this.onclose=null}connect(e,t){var n=this;return(0,g.Z)(function*(){return C.isRequired(e,"url"),C.isRequired(t,"transferFormat"),C.isIn(t,m,"transferFormat"),n._logger.log(r.Trace,"(SSE transport) Connecting."),n._url=e,n._accessToken&&(e+=(e.indexOf("?")<0?"?":"&")+`access_token=${encodeURIComponent(n._accessToken)}`),new Promise((o,s)=>{let c,a=!1;if(t===m.Text){if(v.isBrowser||v.isWebWorker)c=new n._options.EventSource(e,{withCredentials:n._options.withCredentials});else{const l=n._httpClient.getCookieString(e),h={};h.Cookie=l;const[d,p]=H();h[d]=p,c=new n._options.EventSource(e,{withCredentials:n._options.withCredentials,headers:{...h,...n._options.headers}})}try{c.onmessage=l=>{if(n.onreceive)try{n._logger.log(r.Trace,`(SSE transport) data received. ${L(l.data,n._options.logMessageContent)}.`),n.onreceive(l.data)}catch(h){return void n._close(h)}},c.onerror=l=>{a?n._close():s(new Error("EventSource failed to connect. The connection could not be found on the server, either the connection ID is not present on the server, or a proxy is refusing/buffering the connection. If you have multiple servers check that sticky sessions are enabled."))},c.onopen=()=>{n._logger.log(r.Information,`SSE connected to ${n._url}`),n._eventSource=c,a=!0,o()}}catch(l){return void s(l)}}else s(new Error("The Server-Sent Events transport only supports the 'Text' transfer format"))})})()}send(e){var t=this;return(0,g.Z)(function*(){return t._eventSource?X(t._logger,"SSE",t._httpClient,t._url,e,t._options):Promise.reject(new Error("Cannot send until the transport is connected"))})()}stop(){return this._close(),Promise.resolve()}_close(e){this._eventSource&&(this._eventSource.close(),this._eventSource=void 0,this.onclose&&this.onclose(e))}}class _e{constructor(e,t,n,o,s,a){this._logger=n,this._accessTokenFactory=t,this._logMessageContent=o,this._webSocketConstructor=s,this._httpClient=e,this.onreceive=null,this.onclose=null,this._headers=a}connect(e,t){var n=this;return(0,g.Z)(function*(){let o;return C.isRequired(e,"url"),C.isRequired(t,"transferFormat"),C.isIn(t,m,"transferFormat"),n._logger.log(r.Trace,"(WebSockets transport) Connecting."),n._accessTokenFactory&&(o=yield n._accessTokenFactory()),new Promise((s,a)=>{let c;e=e.replace(/^http/,"ws");const l=n._httpClient.getCookieString(e);let h=!1;if(v.isNode||v.isReactNative){const d={},[p,A]=H();d[p]=A,o&&(d[w.Authorization]=`Bearer ${o}`),l&&(d[w.Cookie]=l),c=new n._webSocketConstructor(e,void 0,{headers:{...d,...n._headers}})}else o&&(e+=(e.indexOf("?")<0?"?":"&")+`access_token=${encodeURIComponent(o)}`);c||(c=new n._webSocketConstructor(e)),t===m.Binary&&(c.binaryType="arraybuffer"),c.onopen=d=>{n._logger.log(r.Information,`WebSocket connected to ${e}.`),n._webSocket=c,h=!0,s()},c.onerror=d=>{let p=null;p=typeof ErrorEvent<"u"&&d instanceof ErrorEvent?d.error:"There was an error with the transport",n._logger.log(r.Information,`(WebSockets transport) ${p}.`)},c.onmessage=d=>{if(n._logger.log(r.Trace,`(WebSockets transport) data received. ${L(d.data,n._logMessageContent)}.`),n.onreceive)try{n.onreceive(d.data)}catch(p){return void n._close(p)}},c.onclose=d=>{if(h)n._close(d);else{let p=null;p=typeof ErrorEvent<"u"&&d instanceof ErrorEvent?d.error:"WebSocket failed to connect. The connection could not be found on the server, either the endpoint may not be a SignalR endpoint, the connection ID is not present on the server, or there is a proxy blocking WebSockets. If you have multiple servers check that sticky sessions are enabled.",a(new Error(p))}}})})()}send(e){return this._webSocket&&this._webSocket.readyState===this._webSocketConstructor.OPEN?(this._logger.log(r.Trace,`(WebSockets transport) sending data. ${L(e,this._logMessageContent)}.`),this._webSocket.send(e),Promise.resolve()):Promise.reject("WebSocket is not in the OPEN state")}stop(){return this._webSocket&&this._close(void 0),Promise.resolve()}_close(e){this._webSocket&&(this._webSocket.onclose=()=>{},this._webSocket.onmessage=()=>{},this._webSocket.onerror=()=>{},this._webSocket.close(),this._webSocket=void 0),this._logger.log(r.Trace,"(WebSockets transport) socket closed."),this.onclose&&(!this._isCloseEvent(e)||!1!==e.wasClean&&1e3===e.code?e instanceof Error?this.onclose(e):this.onclose():this.onclose(new Error(`WebSocket closed with status code: ${e.code} (${e.reason||"no reason given"}).`)))}_isCloseEvent(e){return e&&"boolean"==typeof e.wasClean&&"number"==typeof e.code}}class pe{constructor(e,t={}){if(this._stopPromiseResolver=()=>{},this.features={},this._negotiateVersion=1,C.isRequired(e,"url"),this._logger=function oe(i){return void 0===i?new W(r.Information):null===i?M.instance:void 0!==i.log?i:new W(i)}(t.logger),this.baseUrl=this._resolveUrl(e),(t=t||{}).logMessageContent=void 0!==t.logMessageContent&&t.logMessageContent,"boolean"!=typeof t.withCredentials&&void 0!==t.withCredentials)throw new Error("withCredentials option was not a 'boolean' or 'undefined' value");t.withCredentials=void 0===t.withCredentials||t.withCredentials,t.timeout=void 0===t.timeout?1e5:t.timeout;let n=null,o=null;if(v.isNode){const s=require;n=s("ws"),o=s("eventsource")}!v.isNode&&typeof WebSocket<"u"&&!t.WebSocket?t.WebSocket=WebSocket:v.isNode&&!t.WebSocket&&n&&(t.WebSocket=n),!v.isNode&&typeof EventSource<"u"&&!t.EventSource?t.EventSource=EventSource:v.isNode&&!t.EventSource&&typeof o<"u"&&(t.EventSource=o),this._httpClient=new b(t.httpClient||new de(this._logger),t.accessTokenFactory),this._connectionState="Disconnected",this._connectionStarted=!1,this._options=t,this.onreceive=null,this.onclose=null}start(e){var t=this;return(0,g.Z)(function*(){if(C.isIn(e=e||m.Binary,m,"transferFormat"),t._logger.log(r.Debug,`Starting connection with transfer format '${m[e]}'.`),"Disconnected"!==t._connectionState)return Promise.reject(new Error("Cannot start an HttpConnection that is not in the 'Disconnected' state."));if(t._connectionState="Connecting",t._startInternalPromise=t._startInternal(e),yield t._startInternalPromise,"Disconnecting"===t._connectionState){const n="Failed to start the HttpConnection before stop() was called.";return t._logger.log(r.Error,n),yield t._stopPromise,Promise.reject(new E(n))}if("Connected"!==t._connectionState){const n="HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!";return t._logger.log(r.Error,n),Promise.reject(new E(n))}t._connectionStarted=!0})()}send(e){return"Connected"!==this._connectionState?Promise.reject(new Error("Cannot send data if the connection is not in the 'Connected' State.")):(this._sendQueue||(this._sendQueue=new F(this.transport)),this._sendQueue.send(e))}stop(e){var t=this;return(0,g.Z)(function*(){return"Disconnected"===t._connectionState?(t._logger.log(r.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnected state.`),Promise.resolve()):"Disconnecting"===t._connectionState?(t._logger.log(r.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnecting state.`),t._stopPromise):(t._connectionState="Disconnecting",t._stopPromise=new Promise(n=>{t._stopPromiseResolver=n}),yield t._stopInternal(e),void(yield t._stopPromise))})()}_stopInternal(e){var t=this;return(0,g.Z)(function*(){t._stopError=e;try{yield t._startInternalPromise}catch{}if(t.transport){try{yield t.transport.stop()}catch(n){t._logger.log(r.Error,`HttpConnection.transport.stop() threw error '${n}'.`),t._stopConnection()}t.transport=void 0}else t._logger.log(r.Debug,"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.")})()}_startInternal(e){var t=this;return(0,g.Z)(function*(){let n=t.baseUrl;t._accessTokenFactory=t._options.accessTokenFactory,t._httpClient._accessTokenFactory=t._accessTokenFactory;try{if(t._options.skipNegotiation){if(t._options.transport!==_.WebSockets)throw new Error("Negotiation can only be skipped when using the WebSocket transport directly.");t.transport=t._constructTransport(_.WebSockets),yield t._startTransport(n,e)}else{let o=null,s=0;do{if(o=yield t._getNegotiationResponse(n),"Disconnecting"===t._connectionState||"Disconnected"===t._connectionState)throw new E("The connection was stopped during negotiation.");if(o.error)throw new Error(o.error);if(o.ProtocolVersion)throw new Error("Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.");if(o.url&&(n=o.url),o.accessToken){const a=o.accessToken;t._accessTokenFactory=()=>a,t._httpClient._accessToken=a,t._httpClient._accessTokenFactory=void 0}s++}while(o.url&&s<100);if(100===s&&o.url)throw new Error("Negotiate redirection limit exceeded.");yield t._createTransport(n,t._options.transport,o,e)}t.transport instanceof V&&(t.features.inherentKeepAlive=!0),"Connecting"===t._connectionState&&(t._logger.log(r.Debug,"The HttpConnection connected successfully."),t._connectionState="Connected")}catch(o){return t._logger.log(r.Error,"Failed to start the connection: "+o),t._connectionState="Disconnected",t.transport=void 0,t._stopPromiseResolver(),Promise.reject(o)}})()}_getNegotiationResponse(e){var t=this;return(0,g.Z)(function*(){const n={},[o,s]=H();n[o]=s;const a=t._resolveNegotiateUrl(e);t._logger.log(r.Debug,`Sending negotiation request: ${a}.`);try{const c=yield t._httpClient.post(a,{content:"",headers:{...n,...t._options.headers},timeout:t._options.timeout,withCredentials:t._options.withCredentials});if(200!==c.statusCode)return Promise.reject(new Error(`Unexpected status code returned from negotiate '${c.statusCode}'`));const l=JSON.parse(c.content);return(!l.negotiateVersion||l.negotiateVersion<1)&&(l.connectionToken=l.connectionId),l}catch(c){let l="Failed to complete negotiation with the server: "+c;return c instanceof I&&404===c.statusCode&&(l+=" Either this is not a SignalR endpoint or there is a proxy blocking the connection."),t._logger.log(r.Error,l),Promise.reject(new q(l))}})()}_createConnectUrl(e,t){return t?e+(-1===e.indexOf("?")?"?":"&")+`id=${t}`:e}_createTransport(e,t,n,o){var s=this;return(0,g.Z)(function*(){let a=s._createConnectUrl(e,n.connectionToken);if(s._isITransport(t))return s._logger.log(r.Debug,"Connection was provided an instance of ITransport, using that directly."),s.transport=t,yield s._startTransport(a,o),void(s.connectionId=n.connectionId);const c=[],l=n.availableTransports||[];let h=n;for(const d of l){const p=s._resolveTransportOrError(d,t,o);if(p instanceof Error)c.push(`${d.transport} failed:`),c.push(p);else if(s._isITransport(p)){if(s.transport=p,!h){try{h=yield s._getNegotiationResponse(e)}catch(A){return Promise.reject(A)}a=s._createConnectUrl(e,h.connectionToken)}try{return yield s._startTransport(a,o),void(s.connectionId=h.connectionId)}catch(A){if(s._logger.log(r.Error,`Failed to start the transport '${d.transport}': ${A}`),h=void 0,c.push(new Q(`${d.transport} failed: ${A}`,_[d.transport])),"Connecting"!==s._connectionState){const Y="Failed to select transport before stop() was called.";return s._logger.log(r.Debug,Y),Promise.reject(new E(Y))}}}}return Promise.reject(c.length>0?new ee(`Unable to connect to the server with any of the available transports. ${c.join(" ")}`,c):new Error("None of the transports supported by the client are supported by the server."))})()}_constructTransport(e){switch(e){case _.WebSockets:if(!this._options.WebSocket)throw new Error("'WebSocket' is not supported in your environment.");return new _e(this._httpClient,this._accessTokenFactory,this._logger,this._options.logMessageContent,this._options.WebSocket,this._options.headers||{});case _.ServerSentEvents:if(!this._options.EventSource)throw new Error("'EventSource' is not supported in your environment.");return new fe(this._httpClient,this._httpClient._accessToken,this._logger,this._options);case _.LongPolling:return new V(this._httpClient,this._logger,this._options);default:throw new Error(`Unknown transport: ${e}.`)}}_startTransport(e,t){return this.transport.onreceive=this.onreceive,this.transport.onclose=n=>this._stopConnection(n),this.transport.connect(e,t)}_resolveTransportOrError(e,t,n){const o=_[e.transport];if(null==o)return this._logger.log(r.Debug,`Skipping transport '${e.transport}' because it is not supported by this client.`),new Error(`Skipping transport '${e.transport}' because it is not supported by this client.`);if(!function me(i,e){return!i||0!=(e&i)}(t,o))return this._logger.log(r.Debug,`Skipping transport '${_[o]}' because it was disabled by the client.`),new j(`'${_[o]}' is disabled by the client.`,o);if(!(e.transferFormats.map(a=>m[a]).indexOf(n)>=0))return this._logger.log(r.Debug,`Skipping transport '${_[o]}' because it does not support the requested transfer format '${m[n]}'.`),new Error(`'${_[o]}' does not support ${m[n]}.`);if(o===_.WebSockets&&!this._options.WebSocket||o===_.ServerSentEvents&&!this._options.EventSource)return this._logger.log(r.Debug,`Skipping transport '${_[o]}' because it is not supported in your environment.'`),new R(`'${_[o]}' is not supported in your environment.`,o);this._logger.log(r.Debug,`Selecting transport '${_[o]}'.`);try{return this._constructTransport(o)}catch(a){return a}}_isITransport(e){return e&&"object"==typeof e&&"connect"in e}_stopConnection(e){if(this._logger.log(r.Debug,`HttpConnection.stopConnection(${e}) called while in state ${this._connectionState}.`),this.transport=void 0,e=this._stopError||e,this._stopError=void 0,"Disconnected"!==this._connectionState){if("Connecting"===this._connectionState)throw this._logger.log(r.Warning,`Call to HttpConnection.stopConnection(${e}) was ignored because the connection is still in the connecting state.`),new Error(`HttpConnection.stopConnection(${e}) was called while the connection is still in the connecting state.`);if("Disconnecting"===this._connectionState&&this._stopPromiseResolver(),e?this._logger.log(r.Error,`Connection disconnected with error '${e}'.`):this._logger.log(r.Information,"Connection disconnected."),this._sendQueue&&(this._sendQueue.stop().catch(t=>{this._logger.log(r.Error,`TransportSendQueue.stop() threw error '${t}'.`)}),this._sendQueue=void 0),this.connectionId=void 0,this._connectionState="Disconnected",this._connectionStarted){this._connectionStarted=!1;try{this.onclose&&this.onclose(e)}catch(t){this._logger.log(r.Error,`HttpConnection.onclose(${e}) threw error '${t}'.`)}}}else this._logger.log(r.Debug,`Call to HttpConnection.stopConnection(${e}) was ignored because the connection is already in the disconnected state.`)}_resolveUrl(e){if(0===e.lastIndexOf("https://",0)||0===e.lastIndexOf("http://",0))return e;if(!v.isBrowser)throw new Error(`Cannot resolve '${e}'.`);const t=window.document.createElement("a");return t.href=e,this._logger.log(r.Information,`Normalizing '${e}' to '${t.href}'.`),t.href}_resolveNegotiateUrl(e){const t=e.indexOf("?");let n=e.substring(0,-1===t?e.length:t);return"/"!==n[n.length-1]&&(n+="/"),n+="negotiate",n+=-1===t?"":e.substring(t),-1===n.indexOf("negotiateVersion")&&(n+=-1===t?"?":"&",n+="negotiateVersion="+this._negotiateVersion),n}}class F{constructor(e){this._transport=e,this._buffer=[],this._executing=!0,this._sendBufferedData=new O,this._transportResult=new O,this._sendLoopPromise=this._sendLoop()}send(e){return this._bufferData(e),this._transportResult||(this._transportResult=new O),this._transportResult.promise}stop(){return this._executing=!1,this._sendBufferedData.resolve(),this._sendLoopPromise}_bufferData(e){if(this._buffer.length&&typeof this._buffer[0]!=typeof e)throw new Error(`Expected data to be of type ${typeof this._buffer} but was of type ${typeof e}`);this._buffer.push(e),this._sendBufferedData.resolve()}_sendLoop(){var e=this;return(0,g.Z)(function*(){for(;;){if(yield e._sendBufferedData.promise,!e._executing){e._transportResult&&e._transportResult.reject("Connection stopped.");break}e._sendBufferedData=new O;const t=e._transportResult;e._transportResult=void 0;const n="string"==typeof e._buffer[0]?e._buffer.join(""):F._concatBuffers(e._buffer);e._buffer.length=0;try{yield e._transport.send(n),t.resolve()}catch(o){t.reject(o)}}})()}static _concatBuffers(e){const t=e.map(s=>s.byteLength).reduce((s,a)=>s+a),n=new Uint8Array(t);let o=0;for(const s of e)n.set(new Uint8Array(s),o),o+=s.byteLength;return n.buffer}}class O{constructor(){this.promise=new Promise((e,t)=>[this._resolver,this._rejecter]=[e,t])}resolve(){this._resolver()}reject(e){this._rejecter(e)}}class T{static write(e){return`${e}${T.RecordSeparator}`}static parse(e){if(e[e.length-1]!==T.RecordSeparator)throw new Error("Message is incomplete.");const t=e.split(T.RecordSeparator);return t.pop(),t}}T.RecordSeparatorCode=30,T.RecordSeparator=String.fromCharCode(T.RecordSeparatorCode);class be{writeHandshakeRequest(e){return T.write(JSON.stringify(e))}parseHandshakeResponse(e){let t,n;if(N(e)){const c=new Uint8Array(e),l=c.indexOf(T.RecordSeparatorCode);if(-1===l)throw new Error("Message is incomplete.");const h=l+1;t=String.fromCharCode.apply(null,Array.prototype.slice.call(c.slice(0,h))),n=c.byteLength>h?c.slice(h).buffer:null}else{const c=e,l=c.indexOf(T.RecordSeparator);if(-1===l)throw new Error("Message is incomplete.");const h=l+1;t=c.substring(0,h),n=c.length>h?c.substring(h):null}const o=T.parse(t),s=JSON.parse(o[0]);if(s.type)throw new Error("Expected a handshake response from the server.");return[n,s]}}var u=(()=>((u=u||{})[u.Invocation=1]="Invocation",u[u.StreamItem=2]="StreamItem",u[u.Completion=3]="Completion",u[u.StreamInvocation=4]="StreamInvocation",u[u.CancelInvocation=5]="CancelInvocation",u[u.Ping=6]="Ping",u[u.Close=7]="Close",u))();class we{constructor(){this.observers=[]}next(e){for(const t of this.observers)t.next(e)}error(e){for(const t of this.observers)t.error&&t.error(e)}complete(){for(const e of this.observers)e.complete&&e.complete()}subscribe(e){return this.observers.push(e),new re(this,e)}}var f=(()=>((f=f||{}).Disconnected="Disconnected",f.Connecting="Connecting",f.Connected="Connected",f.Disconnecting="Disconnecting",f.Reconnecting="Reconnecting",f))();class Z{constructor(e,t,n,o){this._nextKeepAlive=0,this._freezeEventListener=()=>{this._logger.log(r.Warning,"The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://docs.microsoft.com/aspnet/core/signalr/javascript-client#bsleep")},C.isRequired(e,"connection"),C.isRequired(t,"logger"),C.isRequired(n,"protocol"),this.serverTimeoutInMilliseconds=3e4,this.keepAliveIntervalInMilliseconds=15e3,this._logger=t,this._protocol=n,this.connection=e,this._reconnectPolicy=o,this._handshakeProtocol=new be,this.connection.onreceive=s=>this._processIncomingData(s),this.connection.onclose=s=>this._connectionClosed(s),this._callbacks={},this._methods={},this._closedCallbacks=[],this._reconnectingCallbacks=[],this._reconnectedCallbacks=[],this._invocationId=0,this._receivedHandshakeResponse=!1,this._connectionState=f.Disconnected,this._connectionStarted=!1,this._cachedPingMessage=this._protocol.writeMessage({type:u.Ping})}static create(e,t,n,o){return new Z(e,t,n,o)}get state(){return this._connectionState}get connectionId(){return this.connection&&this.connection.connectionId||null}get baseUrl(){return this.connection.baseUrl||""}set baseUrl(e){if(this._connectionState!==f.Disconnected&&this._connectionState!==f.Reconnecting)throw new Error("The HubConnection must be in the Disconnected or Reconnecting state to change the url.");if(!e)throw new Error("The HubConnection url must be a valid url.");this.connection.baseUrl=e}start(){return this._startPromise=this._startWithStateTransitions(),this._startPromise}_startWithStateTransitions(){var e=this;return(0,g.Z)(function*(){if(e._connectionState!==f.Disconnected)return Promise.reject(new Error("Cannot start a HubConnection that is not in the 'Disconnected' state."));e._connectionState=f.Connecting,e._logger.log(r.Debug,"Starting HubConnection.");try{yield e._startInternal(),v.isBrowser&&window.document.addEventListener("freeze",e._freezeEventListener),e._connectionState=f.Connected,e._connectionStarted=!0,e._logger.log(r.Debug,"HubConnection connected successfully.")}catch(t){return e._connectionState=f.Disconnected,e._logger.log(r.Debug,`HubConnection failed to start successfully because of error '${t}'.`),Promise.reject(t)}})()}_startInternal(){var e=this;return(0,g.Z)(function*(){e._stopDuringStartError=void 0,e._receivedHandshakeResponse=!1;const t=new Promise((n,o)=>{e._handshakeResolver=n,e._handshakeRejecter=o});yield e.connection.start(e._protocol.transferFormat);try{const n={protocol:e._protocol.name,version:e._protocol.version};if(e._logger.log(r.Debug,"Sending handshake request."),yield e._sendMessage(e._handshakeProtocol.writeHandshakeRequest(n)),e._logger.log(r.Information,`Using HubProtocol '${e._protocol.name}'.`),e._cleanupTimeout(),e._resetTimeoutPeriod(),e._resetKeepAliveInterval(),yield t,e._stopDuringStartError)throw e._stopDuringStartError;e.connection.features.inherentKeepAlive||(yield e._sendMessage(e._cachedPingMessage))}catch(n){throw e._logger.log(r.Debug,`Hub handshake failed with error '${n}' during start(). Stopping HubConnection.`),e._cleanupTimeout(),e._cleanupPingTimer(),yield e.connection.stop(n),n}})()}stop(){var e=this;return(0,g.Z)(function*(){const t=e._startPromise;e._stopPromise=e._stopInternal(),yield e._stopPromise;try{yield t}catch{}})()}_stopInternal(e){return this._connectionState===f.Disconnected?(this._logger.log(r.Debug,`Call to HubConnection.stop(${e}) ignored because it is already in the disconnected state.`),Promise.resolve()):this._connectionState===f.Disconnecting?(this._logger.log(r.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnecting state.`),this._stopPromise):(this._connectionState=f.Disconnecting,this._logger.log(r.Debug,"Stopping HubConnection."),this._reconnectDelayHandle?(this._logger.log(r.Debug,"Connection stopped during reconnect delay. Done reconnecting."),clearTimeout(this._reconnectDelayHandle),this._reconnectDelayHandle=void 0,this._completeClose(),Promise.resolve()):(this._cleanupTimeout(),this._cleanupPingTimer(),this._stopDuringStartError=e||new E("The connection was stopped before the hub handshake could complete."),this.connection.stop(e)))}stream(e,...t){const[n,o]=this._replaceStreamingParams(t),s=this._createStreamInvocation(e,t,o);let a;const c=new we;return c.cancelCallback=()=>{const l=this._createCancelInvocation(s.invocationId);return delete this._callbacks[s.invocationId],a.then(()=>this._sendWithProtocol(l))},this._callbacks[s.invocationId]=(l,h)=>{h?c.error(h):l&&(l.type===u.Completion?l.error?c.error(new Error(l.error)):c.complete():c.next(l.item))},a=this._sendWithProtocol(s).catch(l=>{c.error(l),delete this._callbacks[s.invocationId]}),this._launchStreams(n,a),c}_sendMessage(e){return this._resetKeepAliveInterval(),this.connection.send(e)}_sendWithProtocol(e){return this._sendMessage(this._protocol.writeMessage(e))}send(e,...t){const[n,o]=this._replaceStreamingParams(t),s=this._sendWithProtocol(this._createInvocation(e,t,!0,o));return this._launchStreams(n,s),s}invoke(e,...t){const[n,o]=this._replaceStreamingParams(t),s=this._createInvocation(e,t,!1,o);return new Promise((c,l)=>{this._callbacks[s.invocationId]=(d,p)=>{p?l(p):d&&(d.type===u.Completion?d.error?l(new Error(d.error)):c(d.result):l(new Error(`Unexpected message type: ${d.type}`)))};const h=this._sendWithProtocol(s).catch(d=>{l(d),delete this._callbacks[s.invocationId]});this._launchStreams(n,h)})}on(e,t){!e||!t||(e=e.toLowerCase(),this._methods[e]||(this._methods[e]=[]),-1===this._methods[e].indexOf(t)&&this._methods[e].push(t))}off(e,t){if(!e)return;e=e.toLowerCase();const n=this._methods[e];if(n)if(t){const o=n.indexOf(t);-1!==o&&(n.splice(o,1),0===n.length&&delete this._methods[e])}else delete this._methods[e]}onclose(e){e&&this._closedCallbacks.push(e)}onreconnecting(e){e&&this._reconnectingCallbacks.push(e)}onreconnected(e){e&&this._reconnectedCallbacks.push(e)}_processIncomingData(e){if(this._cleanupTimeout(),this._receivedHandshakeResponse||(e=this._processHandshakeResponse(e),this._receivedHandshakeResponse=!0),e){const t=this._protocol.parseMessages(e,this._logger);for(const n of t)switch(n.type){case u.Invocation:this._invokeClientMethod(n);break;case u.StreamItem:case u.Completion:{const o=this._callbacks[n.invocationId];if(o){n.type===u.Completion&&delete this._callbacks[n.invocationId];try{o(n)}catch(s){this._logger.log(r.Error,`Stream callback threw error: ${K(s)}`)}}break}case u.Ping:break;case u.Close:{this._logger.log(r.Information,"Close message received from server.");const o=n.error?new Error("Server returned an error on close: "+n.error):void 0;!0===n.allowReconnect?this.connection.stop(o):this._stopPromise=this._stopInternal(o);break}default:this._logger.log(r.Warning,`Invalid message type: ${n.type}.`)}}this._resetTimeoutPeriod()}_processHandshakeResponse(e){let t,n;try{[n,t]=this._handshakeProtocol.parseHandshakeResponse(e)}catch(o){const s="Error parsing handshake response: "+o;this._logger.log(r.Error,s);const a=new Error(s);throw this._handshakeRejecter(a),a}if(t.error){const o="Server returned handshake error: "+t.error;this._logger.log(r.Error,o);const s=new Error(o);throw this._handshakeRejecter(s),s}return this._logger.log(r.Debug,"Server handshake complete."),this._handshakeResolver(),n}_resetKeepAliveInterval(){this.connection.features.inherentKeepAlive||(this._nextKeepAlive=(new Date).getTime()+this.keepAliveIntervalInMilliseconds,this._cleanupPingTimer())}_resetTimeoutPeriod(){var e=this;if(!(this.connection.features&&this.connection.features.inherentKeepAlive||(this._timeoutHandle=setTimeout(()=>this.serverTimeout(),this.serverTimeoutInMilliseconds),void 0!==this._pingServerHandle))){let t=this._nextKeepAlive-(new Date).getTime();t<0&&(t=0),this._pingServerHandle=setTimeout((0,g.Z)(function*(){if(e._connectionState===f.Connected)try{yield e._sendMessage(e._cachedPingMessage)}catch{e._cleanupPingTimer()}}),t)}}serverTimeout(){this.connection.stop(new Error("Server timeout elapsed without receiving a message from the server."))}_invokeClientMethod(e){var t=this;return(0,g.Z)(function*(){const n=e.target.toLowerCase(),o=t._methods[n];if(!o)return t._logger.log(r.Warning,`No client method with the name '${n}' found.`),void(e.invocationId&&(t._logger.log(r.Warning,`No result given for '${n}' method and invocation ID '${e.invocationId}'.`),yield t._sendWithProtocol(t._createCompletionMessage(e.invocationId,"Client didn't provide a result.",null))));const s=o.slice(),a=!!e.invocationId;let c,l,h;for(const d of s)try{const p=c;c=yield d.apply(t,e.arguments),a&&c&&p&&(t._logger.log(r.Error,`Multiple results provided for '${n}'. Sending error to server.`),h=t._createCompletionMessage(e.invocationId,"Client provided multiple results.",null)),l=void 0}catch(p){l=p,t._logger.log(r.Error,`A callback for the method '${n}' threw error '${p}'.`)}h?yield t._sendWithProtocol(h):a?(l?h=t._createCompletionMessage(e.invocationId,`${l}`,null):void 0!==c?h=t._createCompletionMessage(e.invocationId,null,c):(t._logger.log(r.Warning,`No result given for '${n}' method and invocation ID '${e.invocationId}'.`),h=t._createCompletionMessage(e.invocationId,"Client didn't provide a result.",null)),yield t._sendWithProtocol(h)):c&&t._logger.log(r.Error,`Result given for '${n}' method but server is not expecting a result.`)})()}_connectionClosed(e){this._logger.log(r.Debug,`HubConnection.connectionClosed(${e}) called while in state ${this._connectionState}.`),this._stopDuringStartError=this._stopDuringStartError||e||new E("The underlying connection was closed before the hub handshake could complete."),this._handshakeResolver&&this._handshakeResolver(),this._cancelCallbacksWithError(e||new Error("Invocation canceled due to the underlying connection being closed.")),this._cleanupTimeout(),this._cleanupPingTimer(),this._connectionState===f.Disconnecting?this._completeClose(e):this._connectionState===f.Connected&&this._reconnectPolicy?this._reconnect(e):this._connectionState===f.Connected&&this._completeClose(e)}_completeClose(e){if(this._connectionStarted){this._connectionState=f.Disconnected,this._connectionStarted=!1,v.isBrowser&&window.document.removeEventListener("freeze",this._freezeEventListener);try{this._closedCallbacks.forEach(t=>t.apply(this,[e]))}catch(t){this._logger.log(r.Error,`An onclose callback called with error '${e}' threw error '${t}'.`)}}}_reconnect(e){var t=this;return(0,g.Z)(function*(){const n=Date.now();let o=0,s=void 0!==e?e:new Error("Attempting to reconnect due to a unknown error."),a=t._getNextRetryDelay(o++,0,s);if(null===a)return t._logger.log(r.Debug,"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt."),void t._completeClose(e);if(t._connectionState=f.Reconnecting,t._logger.log(r.Information,e?`Connection reconnecting because of error '${e}'.`:"Connection reconnecting."),0!==t._reconnectingCallbacks.length){try{t._reconnectingCallbacks.forEach(c=>c.apply(t,[e]))}catch(c){t._logger.log(r.Error,`An onreconnecting callback called with error '${e}' threw error '${c}'.`)}if(t._connectionState!==f.Reconnecting)return void t._logger.log(r.Debug,"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.")}for(;null!==a;){if(t._logger.log(r.Information,`Reconnect attempt number ${o} will start in ${a} ms.`),yield new Promise(c=>{t._reconnectDelayHandle=setTimeout(c,a)}),t._reconnectDelayHandle=void 0,t._connectionState!==f.Reconnecting)return void t._logger.log(r.Debug,"Connection left the reconnecting state during reconnect delay. Done reconnecting.");try{if(yield t._startInternal(),t._connectionState=f.Connected,t._logger.log(r.Information,"HubConnection reconnected successfully."),0!==t._reconnectedCallbacks.length)try{t._reconnectedCallbacks.forEach(c=>c.apply(t,[t.connection.connectionId]))}catch(c){t._logger.log(r.Error,`An onreconnected callback called with connectionId '${t.connection.connectionId}; threw error '${c}'.`)}return}catch(c){if(t._logger.log(r.Information,`Reconnect attempt failed because of error '${c}'.`),t._connectionState!==f.Reconnecting)return t._logger.log(r.Debug,`Connection moved to the '${t._connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`),void(t._connectionState===f.Disconnecting&&t._completeClose());s=c instanceof Error?c:new Error(c.toString()),a=t._getNextRetryDelay(o++,Date.now()-n,s)}}t._logger.log(r.Information,`Reconnect retries have been exhausted after ${Date.now()-n} ms and ${o} failed attempts. Connection disconnecting.`),t._completeClose()})()}_getNextRetryDelay(e,t,n){try{return this._reconnectPolicy.nextRetryDelayInMilliseconds({elapsedMilliseconds:t,previousRetryCount:e,retryReason:n})}catch(o){return this._logger.log(r.Error,`IRetryPolicy.nextRetryDelayInMilliseconds(${e}, ${t}) threw error '${o}'.`),null}}_cancelCallbacksWithError(e){const t=this._callbacks;this._callbacks={},Object.keys(t).forEach(n=>{const o=t[n];try{o(null,e)}catch(s){this._logger.log(r.Error,`Stream 'error' callback called with '${e}' threw error: ${K(s)}`)}})}_cleanupPingTimer(){this._pingServerHandle&&(clearTimeout(this._pingServerHandle),this._pingServerHandle=void 0)}_cleanupTimeout(){this._timeoutHandle&&clearTimeout(this._timeoutHandle)}_createInvocation(e,t,n,o){if(n)return 0!==o.length?{arguments:t,streamIds:o,target:e,type:u.Invocation}:{arguments:t,target:e,type:u.Invocation};{const s=this._invocationId;return this._invocationId++,0!==o.length?{arguments:t,invocationId:s.toString(),streamIds:o,target:e,type:u.Invocation}:{arguments:t,invocationId:s.toString(),target:e,type:u.Invocation}}}_launchStreams(e,t){if(0!==e.length){t||(t=Promise.resolve());for(const n in e)e[n].subscribe({complete:()=>{t=t.then(()=>this._sendWithProtocol(this._createCompletionMessage(n)))},error:o=>{let s;s=o instanceof Error?o.message:o&&o.toString?o.toString():"Unknown error",t=t.then(()=>this._sendWithProtocol(this._createCompletionMessage(n,s)))},next:o=>{t=t.then(()=>this._sendWithProtocol(this._createStreamItemMessage(n,o)))}})}}_replaceStreamingParams(e){const t=[],n=[];for(let o=0;o<e.length;o++){const s=e[o];if(this._isObservable(s)){const a=this._invocationId;this._invocationId++,t[a]=s,n.push(a.toString()),e.splice(o,1)}}return[t,n]}_isObservable(e){return e&&e.subscribe&&"function"==typeof e.subscribe}_createStreamInvocation(e,t,n){const o=this._invocationId;return this._invocationId++,0!==n.length?{arguments:t,invocationId:o.toString(),streamIds:n,target:e,type:u.StreamInvocation}:{arguments:t,invocationId:o.toString(),target:e,type:u.StreamInvocation}}_createCancelInvocation(e){return{invocationId:e,type:u.CancelInvocation}}_createStreamItemMessage(e,t){return{invocationId:e,item:t,type:u.StreamItem}}_createCompletionMessage(e,t,n){return t?{error:t,invocationId:e,type:u.Completion}:{invocationId:e,result:n,type:u.Completion}}}class ye{constructor(){this.name="json",this.version=1,this.transferFormat=m.Text}parseMessages(e,t){if("string"!=typeof e)throw new Error("Invalid input for JSON hub protocol. Expected a string.");if(!e)return[];null===t&&(t=M.instance);const n=T.parse(e),o=[];for(const s of n){const a=JSON.parse(s);if("number"!=typeof a.type)throw new Error("Invalid payload.");switch(a.type){case u.Invocation:this._isInvocationMessage(a);break;case u.StreamItem:this._isStreamItemMessage(a);break;case u.Completion:this._isCompletionMessage(a);break;case u.Ping:case u.Close:break;default:t.log(r.Information,"Unknown message type '"+a.type+"' ignored.");continue}o.push(a)}return o}writeMessage(e){return T.write(JSON.stringify(e))}_isInvocationMessage(e){this._assertNotEmptyString(e.target,"Invalid payload for Invocation message."),void 0!==e.invocationId&&this._assertNotEmptyString(e.invocationId,"Invalid payload for Invocation message.")}_isStreamItemMessage(e){if(this._assertNotEmptyString(e.invocationId,"Invalid payload for StreamItem message."),void 0===e.item)throw new Error("Invalid payload for StreamItem message.")}_isCompletionMessage(e){if(e.result&&e.error)throw new Error("Invalid payload for Completion message.");!e.result&&e.error&&this._assertNotEmptyString(e.error,"Invalid payload for Completion message."),this._assertNotEmptyString(e.invocationId,"Invalid payload for Completion message.")}_assertNotEmptyString(e,t){if("string"!=typeof e||""===e)throw new Error(t)}}const Ee={trace:r.Trace,debug:r.Debug,info:r.Information,information:r.Information,warn:r.Warning,warning:r.Warning,error:r.Error,critical:r.Critical,none:r.None};class Te{configureLogging(e){if(C.isRequired(e,"logging"),function Ie(i){return void 0!==i.log}(e))this.logger=e;else if("string"==typeof e){const t=function ke(i){const e=Ee[i.toLowerCase()];if(typeof e<"u")return e;throw new Error(`Unknown log level: ${i}`)}(e);this.logger=new W(t)}else this.logger=new W(e);return this}withUrl(e,t){return C.isRequired(e,"url"),C.isNotEmpty(e,"url"),this.url=e,this.httpConnectionOptions="object"==typeof t?{...this.httpConnectionOptions,...t}:{...this.httpConnectionOptions,transport:t},this}withHubProtocol(e){return C.isRequired(e,"protocol"),this.protocol=e,this}withAutomaticReconnect(e){if(this.reconnectPolicy)throw new Error("A reconnectPolicy has already been set.");return this.reconnectPolicy=e?Array.isArray(e)?new $(e):e:new $,this}build(){const e=this.httpConnectionOptions||{};if(void 0===e.logger&&(e.logger=this.logger),!this.url)throw new Error("The 'HubConnectionBuilder.withUrl' method must be called before building the connection.");const t=new pe(this.url,e);return Z.create(t,this.logger||M.instance,this.protocol||new ye,this.reconnectPolicy)}}var Pe=S(1135),z=S(2223),$e=S(5691),De=S(5333);let Re=(()=>{class i{constructor(t,n){this.userService=void 0,this.userChatService=void 0,this.hubConnection=void 0,this.authorId=void 0,this.authorName=void 0,this.receiverSet=!1,this.canConnect$=new Pe.X(!1),this.userService=t,this.userChatService=n}buildConnection(){this.hubConnection=(new Te).configureLogging(r.None).withUrl("http://localhost:5102/ChatHub").build(),this.authorId=this.userService.userAuthorization().id,this.authorName=this.userService.userAuthorization().firstName,this.startConnection()}leaveChatTab(){this.hubConnection.invoke("LeaveChat",this.authorId).catch(t=>console.log(t))}sendMessage(t,n){this.hubConnection.invoke("SendMessage",n,this.authorId,this.authorName,t).catch(o=>console.log(o))}restoreAllConversations(){this.hubConnection.invoke("RestoreAllConversations",this.authorId).catch(t=>console.log(t))}restoreMessages(t){this.hubConnection.invoke("RestoreMessages",t,this.authorId).catch(n=>console.log(n))}getCanConnect(){return this.canConnect$.asObservable()}startConnection(){this.hubConnection.start().then(()=>{this.hubConnection.invoke("Join",this.authorId).catch(t=>console.log(t)),this.canConnect$.next(!0)}).catch(t=>console.log(t)),this.receiverSet||this.setReceiver()}setReceiver(){this.receiverSet=!0,this.hubConnection.on("ReceiveMessage",(t,n,o,s,a)=>{this.userChatService.setMessageStream({chatId:t,authorId:n,authorName:o,date:s,content:a,fromCurrentUser:n===Number(this.authorId)})}),this.hubConnection.on("ReceiveConversation",(t,n,o,s,a,c,l,h,d)=>{this.userChatService.setPreviousChatsStream({id:t,offerId:n,offerTitle:o,offerPrice:String(s),offerImageUrl:a,withUser:c,date:l,content:h,isRead:d})}),this.hubConnection.on("ReceiveNotificationStatus",t=>{this.userChatService.setNotifications(t)})}}return i.\u0275fac=function(t){return new(t||i)(z.LFG($e.K),z.LFG(De.h))},i.\u0275prov=z.Yz7({token:i,factory:i.\u0275fac,providedIn:"root"}),i})()},5333:(U,x,S)=>{S.d(x,{h:()=>w});var P=S(1135),$=S(7579),g=S(2223);let w=(()=>{class k{constructor(){this.currentChat$=new P.X(null),this.offerId$=new P.X(null),this.messageStream$=new $.x,this.previousChatsStream$=new $.x,this.notifications$=new $.x}setCurrentChat(b){b!==this.currentChat$.value&&this.currentChat$.next(b)}getCurrentChat(){return this.currentChat$.asObservable()}setMessageStream(b){this.messageStream$.next(b)}getMessageStream(){return this.messageStream$.asObservable()}setPreviousChatsStream(b){this.previousChatsStream$.next(b)}getPreviousChatsStream(){return this.previousChatsStream$.asObservable()}setOfferId(b){this.offerId$.next(b)}getOfferId(){return this.offerId$.asObservable()}setNotifications(b){this.notifications$.next(b)}getNotifications(){return this.notifications$.asObservable()}}return k.\u0275fac=function(b){return new(b||k)},k.\u0275prov=g.Yz7({token:k,factory:k.\u0275fac,providedIn:"root"}),k})()},3506:(U,x,S)=>{S.d(x,{X:()=>g});var P=S(1135),$=S(2223);let g=(()=>{class w{constructor(){this.isShowSearch$=new P.X(!0),this.isShowAddOfferButton$=new P.X(!0)}setShowSearch(y){this.isShowSearch$.next(y)}getShowSearch(){return this.isShowSearch$.asObservable()}setShowAddOfferButton(y){this.isShowAddOfferButton$.next(y)}getShowAddOfferButton(){return this.isShowAddOfferButton$.asObservable()}resetHeaderState(){this.isShowSearch$.next(!0),this.isShowAddOfferButton$.next(!0)}}return w.\u0275fac=function(y){return new(y||w)},w.\u0275prov=$.Yz7({token:w,factory:w.\u0275fac,providedIn:"root"}),w})()},5861:(U,x,S)=>{function P(g,w,k,y,b,I,D){try{var E=g[I](D),R=E.value}catch(j){return void k(j)}E.done?w(R):Promise.resolve(R).then(y,b)}function $(g){return function(){var w=this,k=arguments;return new Promise(function(y,b){var I=g.apply(w,k);function D(R){P(I,y,b,D,E,"next",R)}function E(R){P(I,y,b,D,E,"throw",R)}D(void 0)})}}S.d(x,{Z:()=>$})}}]);